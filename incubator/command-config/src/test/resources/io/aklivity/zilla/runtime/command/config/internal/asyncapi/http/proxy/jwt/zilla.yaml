name: example
bindings:
  tcp_server0:
    type: tcp
    kind: server
    options:
      host: 0.0.0.0
      port: 8080
    routes:
    - exit: http_server0
      when:
      - port: 8080
  http_server0:
    type: http
    kind: server
    options:
      access-control:
        policy: cross-origin
      authorization:
        jwt0:
          credentials:
            headers:
              authorization: "Bearer {credentials}"
    routes:
    - exit: http_client0
      when:
      - headers:
          :scheme: http
          :authority: localhost:8080
          :path: /items/*
          :method: GET
      guarded:
        jwt0:
        - public
    - exit: http_client0
      when:
      - headers:
          :scheme: http
          :authority: localhost:8080
          :path: /items
          :method: POST
      guarded:
        jwt0:
        - public
  http_client0:
    type: http
    kind: client
    exit: tcp_client0
  tcp_client0:
    type: tcp
    kind: client
    options:
      host: "${{env.TCP_CLIENT_HOST}}"
      port: ${{env.TCP_CLIENT_PORT}}
guards:
  jwt0:
    type: jwt
    options:
      issuer: "${{env.JWT_ISSUER}}"
      audience: "${{env.JWT_AUDIENCE}}"
      keys:
      - kty: "${{env.JWT_KTY}}"
        "n": "${{env.JWT_N}}"
        e: "${{env.JWT_E}}"
        alg: "${{env.JWT_ALG}}"
        crv: "${{env.JWT_CRV}}"
        x: "${{env.JWT_X}}"
        "y": "${{env.JWT_Y}}"
        use: "${{env.JWT_USE}}"
        kid: "${{env.JWT_KID}}"
