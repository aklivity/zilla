#
# Copyright 2021-2024 Aklivity Inc
#
# Licensed under the Aklivity Community License (the "License"); you may not use
# this file except in compliance with the License.  You may obtain a copy of the
# License at
#
#   https://www.aklivity.io/aklivity-community-license/
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OF ANY KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations under the License.
#

property serverAddress "zilla://streams/app0"

accept ${serverAddress}
    option zilla:window 8192
    option zilla:transmission "duplex"

accepted

read zilla:begin.ext ${pgsql:beginEx()
                              .typeId(zilla:id("pgsql"))
                              .parameter("user", "zillabase")
                              .parameter("database", "dev")
                              .parameter("application_name", "psql")
                              .parameter("client_encoding", "UTF8")
                              .build()}

connected

read zilla:data.ext ${pgsql:dataEx()
                              .typeId(zilla:id("pgsql"))
                              .query()
                                .build()
                              .build()}
read "SHOW ZFUNCTIONS;"
      [0x00]

write advise zilla:flush ${pgsql:flushEx()
                                .typeId(zilla:id("pgsql"))
                                .type()
                                  .column()
                                      .name("Name")
                                      .tableOid(0)
                                      .index(0)
                                      .typeOid(1043)
                                      .length(4)
                                      .modifier(-1)
                                      .format("TEXT")
                                      .build()
                                  .column()
                                      .name("Arguments")
                                      .tableOid(0)
                                      .index(0)
                                      .typeOid(1043)
                                      .length(9)
                                      .modifier(-1)
                                      .format("TEXT")
                                      .build()
                                  .column()
                                      .name("Return Type")
                                      .tableOid(0)
                                      .index(0)
                                      .typeOid(1043)
                                      .length(11)
                                      .modifier(-1)
                                      .format("TEXT")
                                      .build()
                                  .column()
                                      .name("Language")
                                      .tableOid(0)
                                      .index(0)
                                      .typeOid(1043)
                                      .length(8)
                                      .modifier(-1)
                                      .format("TEXT")
                                      .build()
                                  .column()
                                      .name("Events")
                                      .tableOid(0)
                                      .index(0)
                                      .typeOid(1043)
                                      .length(6)
                                      .modifier(-1)
                                      .format("TEXT")
                                      .build()
                                  .build()
                                .build()}
write flush

write zilla:data.ext ${pgsql:dataEx()
                              .typeId(zilla:id("pgsql"))
                              .row()
                                .build()
                              .build()}
write [0x00 0x05]                                                 # Field Count
      [0x00 0x00 0x00 0x0c]                                       # Length
      "send_payment"                                              # Data
      [0x00 0x00 0x00 0x28]                                       # Length
      "user_id VARCHAR, amount DOUBLE PRECISION"                  # Data
      [0x00 0x00 0x00 0x37]                                       # Length
      "event VARCHAR, user_id VARCHAR, amount DOUBLE PRECISION"   # Data
      [0x00 0x00 0x00 0x03]                                       # Length
      "SQL"                                                       # Data
      [0x00 0x00 0x00 0x0a]                                       # Length
      "app_events"                                                # Data

write flush

write advise zilla:flush ${pgsql:flushEx()
                              .typeId(zilla:id("pgsql"))
                              .completion()
                                .tag("SHOW_COMMAND")
                                .build()
                              .build()}

write advise zilla:flush ${pgsql:flushEx()
                              .typeId(zilla:id("pgsql"))
                              .ready()
                                .status("IDLE")
                                .build()
                              .build()}
