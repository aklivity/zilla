#
# Copyright 2021-2023 Aklivity Inc.
#
# Aklivity licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

accept "zilla://streams/app0"
        option zilla:window 8192
        option zilla:transmission "half-duplex"
accepted

read zilla:begin.ext ${mqtt:matchBeginEx()
                            .typeId(zilla:id("mqtt"))
                            .session()
                               .flags("CLEAN_START", "WILL")
                               .clientId("one")
                               .build()
                            .build()}

connected


read zilla:data.ext ${mqtt:dataEx()
                             .typeId(zilla:id("mqtt"))
                             .session()
                                .kind("WILL")
                                .build()
                             .build()}

read ${mqtt:will()
               .topic("wills/one")
               .flags("RETAIN")
               .format("TEXT")
               .payload("client one session expired")
               .build()}

write zilla:begin.ext ${mqtt:beginEx()
                              .typeId(zilla:id("mqtt"))
                              .session()
                                .flags("WILL", "CLEAN_START")
                                .qosMax(0)
                                .packetSizeMax(66560)
                                .capabilities("RETAIN", "WILDCARD", "SUBSCRIPTION_IDS")
                                .clientId("one")
                                .build()
                              .build()}

write zilla:data.empty
write flush
