#
# Copyright 2021-2022 Aklivity Inc.
#
# Aklivity licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

connect "zilla://streams/kafka0"
         option zilla:window 8192
         option zilla:transmission "duplex"

write zilla:begin.ext ${kafka:beginEx()
                            .typeId(zilla:id("kafka"))
                            .merged()
                                .capabilities("FETCH_ONLY")
                                .topic("mqtt_messages")
                                .filter()
                                    .header("filter", "sensor")
                                    .header("filter", "one")
                                    .build()
                                .build()
                            .build()}

connected

read zilla:data.ext ${kafka:matchDataEx()
                            .typeId(zilla:id("kafka"))
                            .merged()
                                .timestamp(kafka:timestamp())
                                .partition(0, 1, 2)
                                .progress(0, 2)
                                .progress(1, 1)
                                .key("sensor/one")
                                .filterMask(0b1)
                                .header("filter", "sensor")
                                .header("filter", "one")
                                .header("clientId", "client2")
                                .header("expiry", "15")
                                .header("contentType", "message")
                                .header("format", "TEXT")
                                .header("responseTopic", "sensor/one")
                                .header("correlation", "info")
                                .build()
                            .build()}

read "message"
