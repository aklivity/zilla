#
# Copyright 2021-2023 Aklivity Inc
#
# Licensed under the Aklivity Community License (the "License"); you may not use
# this file except in compliance with the License.  You may obtain a copy of the
# License at
#
#   https://www.aklivity.io/aklivity-community-license/
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OF ANY KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations under the License.
#

connect "zilla://streams/mqtt0"
         option zilla:window 8192
         option zilla:transmission "duplex"

write zilla:begin.ext ${mqtt:beginEx()
                              .typeId(zilla:id("mqtt"))
                              .session()
                                .expiry(1)
                                .clientId("client-1")
                                .serverRef("mqtt-1.example.com:1883")
                                .build()
                              .build()}

connected

read zilla:reset.ext ${mqtt:resetEx()
                             .typeId(zilla:id("mqtt"))
                             .serverRef("mqtt-2.example.com:1883")
                             .build()}

write aborted
