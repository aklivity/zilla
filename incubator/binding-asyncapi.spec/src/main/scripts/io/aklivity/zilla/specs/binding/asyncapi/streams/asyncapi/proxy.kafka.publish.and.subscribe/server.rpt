#
# Copyright 2021-2023 Aklivity Inc.
#
# Aklivity licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

accept "zilla://streams/asyncapi_kafka0"
        option zilla:window 8192
        option zilla:transmission "duplex"

accepted

read zilla:begin.ext ${asyncapi:matchBeginEx()
                             .typeId(zilla:id("asyncapi"))
                             .extension(kafka:beginEx()
                                            .typeId(zilla:id("kafka"))
                                            .merged()
                                                .capabilities("PRODUCE_ONLY")
                                                .topic("sensors")
                                                .partition(-1, -2)
                                                .ackMode("NONE")
                                                .build()
                                            .build())
                             .build()}

connected

read zilla:data.ext ${kafka:matchDataEx()
                           .typeId(zilla:id("kafka"))
                           .merged()
                             .produce()
                               .deferred(0)
                               .partition(-1, -1)
                               .key("sensors/one")
                               .header("zilla:filter", "sensors")
                               .header("zilla:filter", "one")
                               .header("zilla:local", "client")
                               .headerInt("zilla:expiry", 15)
                               .header("zilla:content-type", "message")
                               .header("zilla:format", "TEXT")
                               .header("zilla:reply-to", "sensors")
                               .header("zilla:reply-key", "sensors/one")
                               .header("zilla:reply-filter", "sensors")
                               .header("zilla:reply-filter", "one")
                               .header("zilla:correlation-id", "info")
                               .header("zilla:qos", "0")
                               .build()
                           .build()}
read "message"
