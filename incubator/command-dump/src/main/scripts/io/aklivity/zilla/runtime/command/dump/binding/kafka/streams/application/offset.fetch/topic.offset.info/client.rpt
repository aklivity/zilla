#
# Copyright 2021-2023 Aklivity Inc
#
# Licensed under the Aklivity Community License (the "License"); you may not use
# this file except in compliance with the License.  You may obtain a copy of the
# License at
#
#   https://www.aklivity.io/aklivity-community-license/
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OF ANY KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations under the License.
#

connect "zilla://streams/app0"
    option zilla:ephemeral "test"
    option zilla:timestamps "false"
    option zilla:window 8192
    option zilla:transmission "half-duplex"

write zilla:begin.ext ${kafka:beginEx()
                               .typeId(zilla:id("kafka"))
                               .offsetFetch()
                                   .groupId("client-1")
                                   .host("broker1.example.com")
                                   .port(9092)
                                   .topic("test")
                                   .partition(0)
                                   .build()
                               .build()}

connected

read zilla:data.ext ${kafka:dataEx()
                             .typeId(zilla:id("kafka"))
                             .offsetFetch()
                                    .partition(0, 2, 0, "test-meta")
                                .build()
                             .build()}
read zilla:data.empty

write close
read closed
