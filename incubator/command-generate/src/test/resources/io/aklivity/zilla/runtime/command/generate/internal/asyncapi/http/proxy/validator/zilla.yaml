name: example
bindings:
  tcp_server0:
    type: tcp
    kind: server
    options:
      host: 0.0.0.0
      port: 8080
    routes:
    - exit: http_server0
      when:
      - port: 8080
  http_server0:
    type: http
    kind: server
    options:
      access-control:
        policy: cross-origin
      requests:
      - path: "/items/{id}"
        method: GET
        params:
          path:
            id:
              model: string
        content:
          model: json
          catalog:
            catalog0:
            - subject: item
      - path: /items
        method: POST
        content:
          model: json
          catalog:
            catalog0:
            - subject: item
    routes:
    - exit: http_client0
      when:
      - headers:
          :scheme: http
          :authority: localhost:8080
          :path: /items/*
          :method: GET
    - exit: http_client0
      when:
      - headers:
          :scheme: http
          :authority: localhost:8080
          :path: /items
          :method: POST
  http_client0:
    type: http
    kind: client
    exit: tcp_client0
  tcp_client0:
    type: tcp
    kind: client
    options:
      host: "${{env.TCP_CLIENT_HOST}}"
      port: ${{env.TCP_CLIENT_PORT}}
catalogs:
  catalog0:
    type: inline
    options:
      subjects:
        item:
          schema: |
            type: object
            properties:
              greeting:
                type: string
            required:
            - greeting
          version: latest
