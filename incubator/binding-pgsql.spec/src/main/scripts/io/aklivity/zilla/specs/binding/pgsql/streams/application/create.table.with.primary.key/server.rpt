#
# Copyright 2021-2023 Aklivity Inc
#
# Licensed under the Aklivity Community License (the "License"); you may not use
# this file except in compliance with the License.  You may obtain a copy of the
# License at
#
#   https://www.aklivity.io/aklivity-community-license/
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OF ANY KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations under the License.
#

property serverAddress "zilla://streams/app0"

accept ${serverAddress}
    option zilla:window 8192
    option zilla:transmission "duplex"

accepted
connected

read zilla:data.ext ${pgsql:dataEx()
                              .typeId(zilla:id("pgsql"))
                              .query()
                                .build()
                              .build()}
read "CREATE TABLE IF NOT EXISTS balances (name VARCHAR, type VARCHAR, description VARCHAR, PRIMARY KEY (name));"

write advise zilla:flush ${pgsql:flushEx()
                              .typeId(zilla:id("pgsql"))
                              .completed()
                                .tag("CREATE_TABLE")
                                .build()
                              .build()}

write advise zilla:flush ${pgsql:flushEx()
                              .typeId(zilla:id("pgsql"))
                              .ready()
                                .status("IDLE")
                                .build()
                              .build()}
