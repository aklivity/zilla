#
# Copyright 2021-2023 Aklivity Inc
#
# Licensed under the Aklivity Community License (the "License"); you may not use
# this file except in compliance with the License.  You may obtain a copy of the
# License at
#
#   https://www.aklivity.io/aklivity-community-license/
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OF ANY KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations under the License.
#

property serverAddress "zilla://streams/app0"

accept ${serverAddress}
    option zilla:window 8192
    option zilla:transmission "duplex"

accepted
connected

read zilla:data.ext ${pgsql:dataEx()
                              .typeId(zilla:id("pgsql"))
                              .query()
                                .build()
                              .build()}
read "SELECT * FROM balances;"
read [0x00]

write advise zilla:flush ${pgsql:flushEx()
                              .typeId(zilla:id("pgsql"))
                              .type()
                                .column()
                                    .name("balance")
                                    .tableOid(0)
                                    .index(0)
                                    .typeOid(701)
                                    .length(8)
                                    .modifier(-1)
                                    .format("TEXT")
                                    .build()
                                .column()
                                    .name("timestamp")
                                    .tableOid(0)
                                    .index(0)
                                    .typeOid(20)
                                    .length(8)
                                    .modifier(-1)
                                    .format("TEXT")
                                    .build()
                                .column()
                                    .name("user_id")
                                    .tableOid(0)
                                    .index(0)
                                    .typeOid(17)
                                    .length(-1)
                                    .modifier(-1)
                                    .format("TEXT")
                                    .build()
                                .build()
                              .build()}

write zilla:data.ext ${pgsql:dataEx()
                              .typeId(zilla:id("pgsql"))
                              .row()
                                .build()
                              .build()}
write [0x00 0x03]                                                 # Field Count
        [0x00 0x00 0x00 0x04]                                       # Length
        [0x31 0x39 0x36 0x34]                                       # Data
        [0x00 0x00 0x00 0x0a]                                       # Length
        [0x31 0x37 0x32 0x33 0x35 0x39 0x33 0x31 0x31 0x33]         # Data
        [0x00 0x00 0x00 0x04]                                       # Length
        [0x5c 0x78 0x33 0x31]                                       # Data

write advise zilla:flush ${pgsql:flushEx()
                              .typeId(zilla:id("pgsql"))
                              .completed()
                                .tag("SELECT 1")
                                .build()
                              .build()}

write advise zilla:flush ${pgsql:flushEx()
                              .typeId(zilla:id("pgsql"))
                              .ready()
                                .status("IDLE")
                                .build()
                              .build()}
