#
# Copyright 2021-2023 Aklivity Inc.
#
# Aklivity licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

asyncapi: 3.0.0
info:
  title: AsyncAPI Petstore
  license:
    name: MIT
  version: 1.0.0
servers:
  plain:
    host: localhost:7114
    protocol: http
    protocolVersion: '2.0'
defaultContentType: application/json

channels:
  pets:
    address: /pets
    messages:
      pet:
        $ref: '#/components/messages/pet'
  showPetById:
    address: /pets/{id}
    messages:
      pet:
        $ref: '#/components/messages/pet'
  customers:
    address: /customer
    messages:
      customer:
        $ref: "#/components/messages/customer"
  verifiedCustomers:
    address: /customer;cid={correlationId}
    messages:
      customer:
        $ref: "#/components/messages/customer"

operations:
  createPets:
    action: send
    bindings:
      http:
        method: POST
    channel:
      $ref: '#/channels/pets'
  listPets:
    action: receive
    bindings:
      http:
        method: GET
    channel:
      $ref: '#/channels/pets'
  getPets:
    action: receive
    bindings:
      http:
        method: GET
        query:
          type: object
          properties:
            limit:
              type: number
    channel:
      $ref: '#/channels/showPetById'
  createCustomer:
    action: send
    bindings:
      http:
        method: POST
    channel:
      $ref: "#/channels/customers"
    reply:
      channel:
        $ref: "#/channels/verifiedCustomers"
    summary: >-
      Add a pet.
    messages:
      - $ref: "#/channels/customers/messages/customer"
  getVerifiedCustomer:
    action: receive
    bindings:
      http:
        method: GET
        query:
          type: object
          properties:
            limit:
              type: number
    channel:
      $ref: '#/channels/verifiedCustomers'
components:
  correlationIds:
    customerCorrelationId:
      location: '$message.header#/CorrelId'
  schemas:
    petPayload:
      type: object
      properties:
        id:
          type: integer
          minimum: 0
          description: Pet id.
        name:
          type: string
          description: Pet name.
        tag:
          type: string
          description: Tag.
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
        username:
          type: string
          example: fehguy
        status:
          type: string
          description: Verification Status
          example: approved
          enum:
            - pending
            - approved
            - denied
        address:
          type: array
          items:
            $ref: "#/components/schemas/Address"
    Address:
      type: object
      properties:
        street:
          type: string
          example: 437 Lytton
        city:
          type: string
          example: Palo Alto
        state:
          type: string
          example: CA
        zip:
          type: string
          example: "94301"

  messages:
    pet:
      name: Pet
      title: Pet
      summary: >-
        Inform about Pet.
      contentType: application/json
      payload:
        $ref: '#/components/schemas/petPayload'
    customer:
      name: Customer
      title: Customer
      summary: Information about a Customer.
      contentType: application/json
      correlationId:
        $ref: '#/components/correlationIds/customerCorrelationId'
      headers:
        type: object
        properties:
          CorrelId:
            type: string
            format: /customer;cid={correlationId}
      payload:
        $ref: "#/components/schemas/Customer"
