---
name: example
vaults:
  server:
    type: filesystem
    options:
      keys:
        store: tls/localhost.p12
        type: pkcs12
        password: ${{env.KEYSTORE_PASSWORD}}
bindings:
  tcp_server0:
    type: tcp
    kind: server
    options:
      host: 0.0.0.0
      port: 9090
    exit: tls_server0
  tcp_server1:
    type: tcp
    kind: server
    options:
      host: 0.0.0.0
      port: 8080
    exit: http_server0
  tls_server0:
    type: tls
    kind: server
    vault: server
    options:
      keys:
        - localhost
      sni:
        - localhost
      alpn:
        - http/1.1
        - h2
    exit: http_server0
  http_server0:
    type: http
    kind: server
    routes:
      - when:
          - headers:
              :scheme: http
              :authority: localhost:8080
          - headers:
              :scheme: https
              :authority: localhost:9090
        exit: http_kafka_proxy0
  http_kafka_proxy0:
    type: http-kafka
    kind: proxy
    routes:
      - when:
          - method: GET
            path: /items/{id};{correlationId}
          - path: /items/{id}
        exit: kafka_cache_client0
        with:
          capability: produce
          topic: items-requests
          key: ${params.id}
          reply-to: items-responses
          async:
            location: /items/${params.id};${correlationId}
  kafka_cache_client0:
    type: kafka
    kind: cache_client
    exit: kafka_cache_server0
  kafka_cache_server0:
    type: kafka
    kind: cache_server
    options:
      bootstrap:
        - items-responses
    exit: kafka_client0
  kafka_client0:
    type: kafka
    kind: client
    exit: tcp_client0
  tcp_client0:
    type: tcp
    kind: client
    options:
      host: kafka
      port: 29092
    routes:
      - when:
          - cidr: 0.0.0.0/0
