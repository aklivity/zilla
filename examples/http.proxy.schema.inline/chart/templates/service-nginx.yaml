apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app.kubernetes.io/instance: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: nginx
    spec:
      containers:
        - name: nginx
          image: "nginx:latest"
          ports:
            - containerPort: 443
          readinessProbe:
            tcpSocket:
              port: 443
            initialDelaySeconds: 3
            periodSeconds: 5
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: ssl
              mountPath: /etc/nginx/ssl
            - name: www
              mountPath: /usr/share/nginx/html
      volumes:
        - name: config
          configMap:
            name: nginx-config
        - name: ssl
          secret:
            secretName: nginx-ssl
            items:
              - key: cert.pem
                path: cert.pem
              - key: key.pem
                path: key.pem
        - name: www
          persistentVolumeClaim:
            claimName: nginx-www
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |-
{{ .Files.Get "files/nginx.conf" | indent 4 }}
---
apiVersion: v1
kind: Secret
metadata:
  name: nginx-ssl
type: Opaque
data:
  cert.pem: |-
{{ .Files.Get "files/cert.pem" | b64enc | indent 4 }}
  key.pem: |-
{{ .Files.Get "files/key.pem" | b64enc | indent 4 }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nginx-www
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Mi
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  selector:
    app.kubernetes.io/instance: nginx
  ports:
    - name: https
      port: 443
  type: ClusterIP
