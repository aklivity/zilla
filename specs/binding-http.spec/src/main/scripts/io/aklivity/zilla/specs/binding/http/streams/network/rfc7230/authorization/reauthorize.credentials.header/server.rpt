#
# Copyright 2021-2023 Aklivity Inc.
#
# Aklivity licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

accept "zilla://streams/net0"
  option zilla:window 8192
  option zilla:transmission "duplex"
accepted

read zilla:begin.ext ${proxy:matchBeginEx()
                            .typeId(zilla:id("proxy"))
                            .info()
                              .secure()
                                .version("TLSv1.3")
                                .build()
                              .build()
                            .build()}

connected

read "GET / HTTP/1.1" "\r\n"
     "Host: example.com:9090" "\r\n"
     "Authorization: Bearer TOKEN" "\r\n"
     "\r\n"

read closed

write "HTTP/1.1 200 OK" "\r\n"
      "Server: Zilla" "\r\n"
      "Date: Tue, 02 Feb 2022 22:22:22 GMT" "\r\n"
      "Content-Type: text/event-stream" "\r\n"
      "Connection: close" "\r\n"
      "\r\n"
write flush

write "data:Hello, world\n"
      "\n"
write flush

write "type:challenge\n"
      "data:"
      "{"
          "\"method\":\"POST\","
          "\"headers\":"
          "{"
              "\"content-type\":\"application/x-challenge-response\""
          "}"
      "}\n"
      "\n"


accepted

read zilla:begin.ext ${proxy:matchBeginEx()
                            .typeId(zilla:id("proxy"))
                            .info()
                              .secure()
                                .version("TLSv1.3")
                                .build()
                              .build()
                            .build()}

connected

read "POST / HTTP/1.1" "\r\n"
     "Host: example.com:9090" "\r\n"
     "Authorization: Bearer TOKEN" "\r\n"
     "Content-Type: application/x-challenge-response" "\r\n"
     "Content-Length: 0" "\r\n"
     "\r\n"

write "HTTP/1.1 204 No Content" "\r\n"
      "Server: Zilla" "\r\n"
      "\r\n"
write flush
