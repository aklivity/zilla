#
# Copyright 2021-2023 Aklivity Inc.
#
# Aklivity licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

# Request 1 - valid path params
connect "zilla://streams/app0"
    option zilla:window 8192
    option zilla:transmission "half-duplex"

write zilla:begin.ext ${http:beginEx()
                              .typeId(zilla:id("http"))
                              .header(":scheme", "http")
                              .header(":method", "POST")
                              .header(":path", "/valid/1234567890123/1234567890123")
                              .header(":authority", "localhost:8080")
                              .build()}
connected

write close

read zilla:begin.ext ${http:beginEx()
                             .typeId(zilla:id("http"))
                             .header(":status", "200")
                             .header("content-length", "9")
                             .build()}

read "response1"
read closed
read notify RESPONSE_ONE_RECEIVED


# Request 2 - valid path params, query param
connect await RESPONSE_ONE_RECEIVED
        "zilla://streams/app0"
    option zilla:window 8192
    option zilla:transmission "half-duplex"

write zilla:begin.ext ${http:beginEx()
                              .typeId(zilla:id("http"))
                              .header(":scheme", "http")
                              .header(":method", "POST")
                              .header(":path", "/valid/1234567890123/1234567890123?page=1234567890123")
                              .header(":authority", "localhost:8080")
                              .build()}
connected

write close

read zilla:begin.ext ${http:beginEx()
                             .typeId(zilla:id("http"))
                             .header(":status", "200")
                             .header("content-length", "9")
                             .build()}

read "response2"
read closed
read notify RESPONSE_TWO_RECEIVED


# Request 3 - valid path params, url encoded query param
connect await RESPONSE_TWO_RECEIVED
        "zilla://streams/app0"
    option zilla:window 8192
    option zilla:transmission "half-duplex"

write zilla:begin.ext ${http:beginEx()
                              .typeId(zilla:id("http"))
                              .header(":scheme", "http")
                              .header(":method", "POST")
                              .header(":path", "/valid/1234567890123/1234567890123?%70%61%67%65=1234567890123")
                              .header(":authority", "localhost:8080")
                              .build()}
connected

write close

read zilla:begin.ext ${http:beginEx()
                             .typeId(zilla:id("http"))
                             .header(":status", "200")
                             .header("content-length", "9")
                             .build()}

read "response3"
read closed
read notify RESPONSE_THREE_RECEIVED


# Request 4 - valid path params, query param, header field
connect await RESPONSE_THREE_RECEIVED
        "zilla://streams/app0"
    option zilla:window 8192
    option zilla:transmission "half-duplex"

write zilla:begin.ext ${http:beginEx()
                              .typeId(zilla:id("http"))
                              .header(":scheme", "http")
                              .header(":method", "POST")
                              .header(":path", "/valid/1234567890123/1234567890123?page=1234567890123")
                              .header(":authority", "localhost:8080")
                              .header("code", "1234567890123")
                              .build()}
connected

write close

read zilla:begin.ext ${http:beginEx()
                             .typeId(zilla:id("http"))
                             .header(":status", "200")
                             .header("content-length", "9")
                             .build()}

read "response4"
read closed
read notify RESPONSE_FOUR_RECEIVED


# Request 5 - valid path params, query param, header field, valid content
connect await RESPONSE_FOUR_RECEIVED
        "zilla://streams/app0"
    option zilla:window 8192
    option zilla:transmission "half-duplex"

write zilla:begin.ext ${http:beginEx()
                              .typeId(zilla:id("http"))
                              .header(":scheme", "http")
                              .header(":method", "POST")
                              .header(":path", "/valid/1234567890123/1234567890123?page=1234567890123")
                              .header(":authority", "localhost:8080")
                              .header("code", "1234567890123")
                              .build()}
connected

write "1234567890123"
write close

read zilla:begin.ext ${http:beginEx()
                             .typeId(zilla:id("http"))
                             .header(":status", "200")
                             .header("content-length", "9")
                             .build()}

read "response5"
read closed
