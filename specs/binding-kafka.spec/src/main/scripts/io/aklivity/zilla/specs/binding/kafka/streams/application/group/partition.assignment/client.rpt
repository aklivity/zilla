#
# Copyright 2021-2023 Aklivity Inc.
#
# Aklivity licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

connect "zilla://streams/app0"
    option zilla:window 8192
    option zilla:transmission "half-duplex"

write zilla:begin.ext ${kafka:beginEx()
                               .typeId(zilla:id("kafka"))
                               .group()
                                   .groupId("client-1")
                                   .protocol("highlander")
                                   .timeout(45000)
                                   .metadata(kafka:memberMetadata()
                                       .consumerId("localhost:9092")
                                       .topic("test", 0)
                                       .build())
                                   .build()
                               .build()}

connected

read zilla:begin.ext ${kafka:matchBeginEx()
                               .typeId(zilla:id("kafka"))
                               .group()
                                   .groupId("test")
                                   .protocol("highlander")
                                   .timeout(30000)
                                   .build()
                               .build()}

read advised zilla:flush ${kafka:flushEx()
                             .typeId(zilla:id("kafka"))
                             .group()
                                 .leaderId("memberId-1")
                                 .memberId("memberId-1")
                                 .members("memberId-1", kafka:memberMetadata()
                                    .consumerId("localhost:9092")
                                    .topic("test", 0)
                                    .build())
                                 .build()
                             .build()}

write ${kafka:memberAssignment()
          .member("memberId-1", "test", 0, "localhost:9092", 0)
          .build()}
write flush

read ${kafka:topicAssignment()
              .topic("test", 0, "localhost:9092", 0)
              .build()}
