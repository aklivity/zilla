#
# Copyright 2021-2023 Aklivity Inc.
#
# Aklivity licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

property deltaMillis 0L
property newTimestamp ${kafka:timestamp() + deltaMillis}

accept "zilla://streams/app0"
    option zilla:window 8192
    option zilla:transmission "half-duplex"

accepted

read zilla:begin.ext ${kafka:beginEx()
                              .typeId(zilla:id("kafka"))
                              .merged()
                                   .capabilities("PRODUCE_ONLY")
                                   .topic("test")
                                   .groupId("client-1")
                                   .consumerId("consumer-1")
                                   .ackMode("LEADER_ONLY")
                                   .build()
                               .build()}

connected

read zilla:data.ext ${kafka:dataEx()
                              .typeId(zilla:id("kafka"))
                              .merged()
                                .produce()
                                  .timestamp(newTimestamp)
                                  .key("message-key!")
                                  .build()
                              .build()}
read "Hello, world #A1"

write zilla:reset.ext ${kafka:resetEx()
                           .typeId(zilla:id("kafka"))
                           .error(0)
                           .consumerId("consumer-2")
                           .build()}

read abort
