#
# Copyright 2021-2023 Aklivity Inc
#
# Licensed under the Aklivity Community License (the "License"); you may not use
# this file except in compliance with the License.  You may obtain a copy of the
# License at
#
#   https://www.aklivity.io/aklivity-community-license/
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OF ANY KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations under the License.
#

---
name: test
catalogs:
  catalog0:
    type: test
    options:
        subject: petstore
        schema: |
          openapi: "3.0.0"
          info:
            version: 1.0.0
            title: Swagger Petstore
            license:
              name: MIT
          servers:
            - url: http://localhost:8080
          paths:
            /customer:
              post:
                tags:
                  - customer
                summary: Create unverified customer
                description: Create a new customer and start a verification process
                operationId: createCustomer
                parameters:
                  - in: header
                    name: Prefer
                    required: true
                    schema:
                      type: string
                      enum:
                        - respond-async
                requestBody:
                  description: Created customer object
                  content:
                    application/json:
                      schema:
                        $ref: "#/components/schemas/Customer"
                responses:
                  "202":
                    description: successful operation
                    headers:
                      Location:
                        schema:
                          type: string
                          format: /customer;cid={correlationId}
                        description: Customer verification result location URL
                security:
                  - petstore_auth:
                      - write:all
            /customer;cid={correlationId}:
              get:
                tags:
                  - customer
                summary: Verify customer details
                description: Fetch and wait the verification status change
                operationId: getVerifiedCustomer
                parameters:
                  - name: correlationId
                    in: path
                    description: Correlation ID of the verification request
                    required: true
                    schema:
                      type: string
                      format: uuid
                  - in: header
                    name: Prefer
                    schema:
                      type: string
                      pattern: '^wait=\d+$'
                responses:
                  default:
                    description: successful operation
                    content:
                      application/json:
                        schema:
                          $ref: "#/components/schemas/Customer"
                  "202":
                    description: successful operation
                    headers:
                      Location:
                        schema:
                          type: string
                          format: /customer;cid={correlationId}
                        description: Customer verification result location URL
                security:
                  - petstore_auth:
                      - read:all
          components:
            schemas:
              Customer:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 100000
                  username:
                    type: string
                    example: fehguy
                  status:
                    type: string
                    description: Verification Status
                    example: approved
                    enum:
                      - pending
                      - approved
                      - denied
                  address:
                    type: array
                    items:
                      $ref: "#/components/schemas/Address"
              Address:
                type: object
                properties:
                  street:
                    type: string
                    example: 437 Lytton
                  city:
                    type: string
                    example: Palo Alto
                  state:
                    type: string
                    example: CA
                  zip:
                    type: string
                    example: "94301"
  catalog1:
    type: test
    options:
      subject: petstore
      schema: |
        asyncapi: 3.0.0
        info:
          title: Petstore Kafka API
          version: 1.0.0
        defaultContentType: application/json
        servers:
          host-connections:
            host: 'localhost:9092'
            protocol: kafka-secure
            description: Test broker
            tags:
              - name: 'kind:remote'
                description: This server is a remote server. Not exposed by the application.
              - name: 'visibility:private'
                description: This resource is private and only available to certain users.
        channels:
          customers:
            address: "petstore-customers"
            messages:
              customer:
                $ref: "#/components/messages/customer"
              empty:
                $ref: "#/components/messages/empty"
            description: The topic on which pet values may be produced and consumed.
          verifiedCustomers:
            address: "petstore-verified-customers"
            messages:
              customer:
                $ref: "#/components/messages/customer"
              empty:
                $ref: "#/components/messages/empty"
            description: The topic on which pet values may be produced and consumed.
        operations:
          createCustomer:
            action: send
            channel:
              $ref: "#/channels/customers"
            reply:
              channel:
                $ref: "#/channels/verifiedCustomers"
            summary: >-
              Add a pet.
            messages:
              - $ref: "#/channels/customers/messages/customer"
        components:
          correlationIds:
            customerVerifyCorrelationId:
              description: >
                This correlation ID is used for message tracing and messages
                correlation. This correlation ID is generated at runtime based on the
                `VERIFY_ID` and sent to the RESPONSE message.
              location: $message.header#/VERIFY_ID
          messages:
            empty:
              name: EmptyMessage
              payload:
                type: "null"
            customer:
              name: Customer
              title: Customer
              summary: Information about a Customer.
              contentType: application/json
              payload:
                $ref: "#/components/schemas/Customer"
          schemas:
            Customer:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                  example: 100000
                username:
                  type: string
                  example: fehguy
                status:
                  type: string
                  description: Verification Status
                  example: approved
                  enum:
                    - pending
                    - approved
                    - denied
                address:
                  type: array
                  items:
                    $ref: "#/components/schemas/Address"
            Address:
              type: object
              properties:
                street:
                  type: string
                  example: 437 Lytton
                city:
                  type: string
                  example: Palo Alto
                state:
                  type: string
                  example: CA
                zip:
                  type: string
                  example: "94301"


bindings:
  composite0:
    type: openapi-asyncapi
    kind: proxy
    options:
      specs:
        openapi:
          openapi-id:
            catalog:
              catalog0:
                subject: petstore
                version: latest
        asyncapi:
          asyncapi-id:
            catalog:
              catalog1:
                subject: petstore
                version: latest
    routes:
      - when:
          - api-id: openapi-id
        exit: asyncapi_client0
        with:
          api-id: asyncapi-id
