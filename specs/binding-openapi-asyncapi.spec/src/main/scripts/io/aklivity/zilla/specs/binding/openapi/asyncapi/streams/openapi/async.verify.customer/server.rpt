#
# Copyright 2021-2023 Aklivity Inc
#
# Licensed under the Aklivity Community License (the "License"); you may not use
# this file except in compliance with the License.  You may obtain a copy of the
# License at
#
#   https://www.aklivity.io/aklivity-community-license/
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OF ANY KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations under the License.
#

accept "zilla://streams/composite0"
        option zilla:window 8192
        option zilla:transmission "half-duplex"
accepted

read zilla:begin.ext ${openapi:beginEx()
                             .typeId(zilla:id("openapi"))
                             .apiId(0)
                             .operationId("createCustomer")
                             .extension(http:beginEx()
                                  .typeId(zilla:id("http"))
                                  .header(":method", "POST")
                                  .header(":scheme", "http")
                                  .header(":path", "/customer")
                                  .header(":authority", "localhost:8080")
                                  .header("content-type", "application/json")
                                  .header("content-length", "155")
                                  .header("prefer", "respond-async")
                                  .header("idempotency-key", "3f96592e-c8f1-4167-8c46-85f2aabb70a5")
                                  .build())
                             .build()}
connected

read "{ \"id\": 100000, \"username\": \"fehguy\", \"status\": \"approved\", \"address\": [ { \"street\": \"437 Lytton\", \"city\": \"Palo Alto\", \"state\": \"CA\", \"zip\": \"94301\" } ] }"
read closed

write zilla:begin.ext ${openapi:beginEx()
                             .typeId(zilla:id("openapi"))
                             .apiId(0)
                             .operationId("createCustomer")
                             .extension(http:beginEx()
                                   .typeId(zilla:id("http"))
                                   .header(":status", "202")
                                   .header("content-length", "0")
                                   .header("Location", "/customer;cid=3f96592e-c8f1-4167-8c46-85f2aabb70a5-966ecfabf0fe9086ce63f615b87a6bed")
                                  .build())
                             .build()}
write flush

write close

accepted

read zilla:begin.ext ${openapi:matchBeginEx()
                             .typeId(zilla:id("openapi"))
                             .apiId(0)
                             .operationId("getVerifiedCustomer")
                             .extension(http:beginEx()
                                  .typeId(zilla:id("http"))
                                  .header(":method", "GET")
                                  .header(":scheme", "http")
                                  .header(":authority", "localhost:8080")
                                  .header(":path", "/customer;cid=3f96592e-c8f1-4167-8c46-85f2aabb70a5-966ecfabf0fe9086ce63f615b87a6bed")
                                  .header("prefer", "respond-async")
                                  .build())
                             .build()}
connected

read closed

write zilla:begin.ext ${openapi:beginEx()
                             .typeId(zilla:id("openapi"))
                             .apiId(0)
                             .operationId("getVerifiedCustomer")
                             .extension(http:beginEx()
                                  .typeId(zilla:id("http"))
                                  .header(":status", "204")
                                  .build())
                             .build()}

write flush
write close
