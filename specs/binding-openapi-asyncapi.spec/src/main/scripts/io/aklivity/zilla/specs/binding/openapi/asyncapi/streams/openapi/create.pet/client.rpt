#
# Copyright 2021-2024 Aklivity Inc
#
# Licensed under the Aklivity Community License (the "License"); you may not use
# this file except in compliance with the License.  You may obtain a copy of the
# License at
#
#   https://www.aklivity.io/aklivity-community-license/
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OF ANY KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations under the License.
#

connect "zilla://streams/composite0"
        option zilla:window 8192
        option zilla:transmission "half-duplex"

write zilla:begin.ext ${openapi:beginEx()
                             .typeId(zilla:id("openapi"))
                             .apiId(0)
                             .operationId("createPets")
                             .extension(http:beginEx()
                                  .typeId(zilla:id("http"))
                                  .header(":method", "POST")
                                  .header(":scheme", "http")
                                  .header(":path", "/pets")
                                  .header(":authority", "localhost:8080")
                                  .header("content-type", "application/json")
                                  .header("content-length", "39")
                                  .build())
                             .build()}
connected

write "{\"id\": 1, \"name\": \"Dog\", \"tag\": \"test\"}"
write close

read zilla:begin.ext ${openapi:matchBeginEx()
                             .typeId(zilla:id("openapi"))
                             .apiId(0)
                             .operationId("createPets")
                             .extension(http:matchBeginEx()
                                   .typeId(zilla:id("http"))
                                   .header(":status", "204")
                                  .build())
                             .build()}
