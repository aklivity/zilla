#
# Copyright 2021-2024 Aklivity Inc
#
# Licensed under the Aklivity Community License (the "License"); you may not use
# this file except in compliance with the License.  You may obtain a copy of the
# License at
#
#   https://www.aklivity.io/aklivity-community-license/
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OF ANY KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations under the License.
#

---
name: test
catalogs:
  test0:
    type: test
    options:
      id: 1
      subject: health
      schema: |
        
        syntax = "proto3";

        package grpc.health.v1;

        option csharp_namespace = "Grpc.Health.V1";
        option go_package = "google.golang.org/grpc/health/grpc_health_v1";
        option java_multiple_files = true;
        option java_outer_classname = "HealthProto";
        option java_package = "io.grpc.health.v1";

        message HealthCheckRequest 
        {
          string service = 1;
        }

        message HealthCheckResponse 
        {
          enum ServingStatus 
        {
            UNKNOWN = 0;
            SERVING = 1;
            NOT_SERVING = 2;
            SERVICE_UNKNOWN = 3;  // Used only by the Watch method.
          }
          ServingStatus status = 1;
        }

        service Health 
        {
          rpc Check(HealthCheckRequest) returns (HealthCheckResponse);
        
          rpc Watch(HealthCheckRequest) returns (stream HealthCheckResponse);
        }
bindings:
  net0:
    type: grpc
    kind: server
    catalog:
      test0:
        - subject: health
    routes:
      - exit: app0
        when:
          - method: example.grpc.health.v1.Health/*
            metadata:
              custom: test
