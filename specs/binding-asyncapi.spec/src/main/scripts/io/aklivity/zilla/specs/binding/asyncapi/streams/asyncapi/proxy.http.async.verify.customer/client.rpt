#
# Copyright 2021-2023 Aklivity Inc.
#
# Aklivity licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

connect "zilla://streams/asyncapi_proxy0"
        option zilla:window 8192
        option zilla:transmission "half-duplex"

write zilla:begin.ext ${asyncapi:beginEx()
                             .typeId(zilla:id("asyncapi"))
                             .apiId(0)
                             .operationId("createCustomer")
                             .extension(http:beginEx()
                                  .typeId(zilla:id("http"))
                                  .header(":method", "POST")
                                  .header(":scheme", "http")
                                  .header(":path", "/customer")
                                  .header(":authority", "localhost:8080")
                                  .header("content-type", "application/json")
                                  .header("content-length", "155")
                                  .header("prefer", "respond-async")
                                  .header("idempotency-key", "3f96592e-c8f1-4167-8c46-85f2aabb70a5")
                                  .build())
                             .build()}
connected

write "{ \"id\": 100000, \"username\": \"fehguy\", \"status\": \"approved\", \"address\": [ { \"street\": \"437 Lytton\", \"city\": \"Palo Alto\", \"state\": \"CA\", \"zip\": \"94301\" } ] }"
write close

read zilla:begin.ext ${asyncapi:matchBeginEx()
                             .typeId(zilla:id("asyncapi"))
                             .apiId(0)
                             .extension(http:beginEx()
                                   .typeId(zilla:id("http"))
                                   .header(":status", "202")
                                   .header("content-length", "0")
                                   .header("location", "/customer;cid=3f96592e-c8f1-4167-8c46-85f2aabb70a5-966ecfabf0fe9086ce63f615b87a6bed")
                                  .build())
                             .build()}

read closed

read notify RECEIVED_ASYNC_RESPONSE

connect await RECEIVED_ASYNC_RESPONSE
        "zilla://streams/asyncapi_proxy0"
    option zilla:window 8192
    option zilla:transmission "half-duplex"


write zilla:begin.ext ${asyncapi:beginEx()
                             .typeId(zilla:id("asyncapi"))
                             .apiId(0)
                             .operationId("getVerifiedCustomer")
                             .extension(http:beginEx()
                                  .typeId(zilla:id("http"))
                                  .header(":method", "GET")
                                  .header(":scheme", "http")
                                  .header(":authority", "localhost:8080")
                                  .header(":path", "/customer;cid=3f96592e-c8f1-4167-8c46-85f2aabb70a5-966ecfabf0fe9086ce63f615b87a6bed")
                                  .header("prefer", "respond-async")
                                  .build())
                             .build()}
connected

write close

read zilla:begin.ext ${asyncapi:matchBeginEx()
                             .typeId(zilla:id("asyncapi"))
                             .apiId(0)
                             .extension(http:beginEx()
                                  .typeId(zilla:id("http"))
                                  .header(":status", "204")
                                  .build())
                             .build()}

read closed
