#
# Copyright 2021-2024 Aklivity Inc.
#
# Aklivity licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

property deltaMillis 0L
property newTimestamp ${kafka:timestamp() + deltaMillis}

connect "zilla://streams/asyncapi_kafka0"
        option zilla:window 8192
        option zilla:transmission "duplex"

write zilla:begin.ext ${asyncapi:beginEx()
                             .typeId(zilla:id("asyncapi"))
                             .apiId(7)
                             .extension(kafka:beginEx()
                                           .typeId(zilla:id("kafka"))
                                           .merged()
                                               .capabilities("PRODUCE_ONLY")
                                               .topic("petstore-customers")
                                               .partition(-1, -2)
                                               .ackMode("IN_SYNC_REPLICAS")
                                               .build()
                                            .build())
                             .build()}

connected

write option zilla:flags "init"
write zilla:data.ext ${kafka:dataEx()
                              .typeId(zilla:id("kafka"))
                              .merged()
                                .produce()
                                  .timestamp(newTimestamp)
                                  .partition(-1, -1)
                                  .build()
                              .build()}
write zilla:data.empty
write flush

write option zilla:flags "none"
write "{ \"id\": 100000, \"username\": \"fehguy\", \"status\": \"approved\", \"address\": [ { \"street\": \"437 Lytton\", \"city\": \"Palo Alto\", \"state\": \"CA\", \"zip\": \"94301\" } ] }"
write flush

write notify SEND_ASYNC_REQUEST

write option zilla:flags "fin"
write zilla:data.ext ${kafka:dataEx()
                            .typeId(zilla:id("kafka"))
                            .merged()
                              .produce()
                                .partition(-1, -1)
                                .header("requestId", "3f96592e-c8f1-4167-8c46-85f2aabb70a5-fcc9c9231b3719989b3110968d068822")
                                .build()
                            .build()}
write zilla:data.empty
write flush

write close
read closed

write notify SENT_ASYNC_REQUEST

connect await SENT_ASYNC_REQUEST
        "zilla://streams/asyncapi_kafka0"
    option zilla:window 8192
    option zilla:transmission "duplex"

write zilla:begin.ext ${asyncapi:beginEx()
                             .typeId(zilla:id("asyncapi"))
                             .apiId(7)
                             .extension(kafka:beginEx()
                                      .typeId(zilla:id("kafka"))
                                      .merged()
                                          .capabilities("FETCH_ONLY")
                                          .topic("petstore-verified-customers")
                                          .partition(-1, -2)
                                          .filter()
                                            .header("zilla:correlation-id", "3f96592e-c8f1-4167-8c46-85f2aabb70a5-fcc9c9231b3719989b3110968d068822")
                                            .build()
                                          .build()
                                      .build())
                             .build()}

connected

read advised zilla:flush

read notify RECEIVED_ASYNC_FLUSH

read closed
write close

connect await RECEIVED_ASYNC_FLUSH
        "zilla://streams/asyncapi_kafka0"
    option zilla:window 8192
    option zilla:transmission "duplex"

write zilla:begin.ext ${asyncapi:beginEx()
                             .typeId(zilla:id("asyncapi"))
                             .apiId(7)
                             .extension(kafka:beginEx()
                                      .typeId(zilla:id("kafka"))
                                      .merged()
                                          .capabilities("FETCH_ONLY")
                                          .topic("petstore-verified-customers")
                                          .partition(-1, -2)
                                          .filter()
                                            .header("zilla:correlation-id", "3f96592e-c8f1-4167-8c46-85f2aabb70a5-fcc9c9231b3719989b3110968d068822")
                                            .build()
                                          .build()
                                      .build())
                             .build()}

connected

read zilla:data.ext ${kafka:matchDataEx()
                           .typeId(zilla:id("kafka"))
                           .merged()
                             .fetch()
                               .partition(0, 1, 2)
                               .progress(0, 2)
                               .progress(1, 1)
                               .key("92d0bf92-63e0-4cfc-ae73-71dee92d1544")
                               .header(":status", "204")
                               .header("zilla:correlation-id", "3f96592e-c8f1-4167-8c46-85f2aabb70a5-fcc9c9231b3719989b3110968d068822")
                               .build()
                           .build()}
read zilla:data.null

read closed
write close
