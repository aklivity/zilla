/*
 * Copyright 2021-2023 Aklivity Inc
 *
 * Licensed under the Aklivity Community License (the "License"); you may not use
 * this file except in compliance with the License.  You may obtain a copy of the
 * License at
 *
 *   https://www.aklivity.io/aklivity-community-license/
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OF ANY KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations under the License.
 */

 scope internal
  {
     scope codec
     {
         struct MqttSubscribeMessage
         {
            uint32 extensionLength;
            octets[extensionLength] extension;
            uint32 payloadLength;
            octets[payloadLength] payload;
         }

         struct MqttPublishOffsetMetadata
         {
             uint8 version = 1;
             int64 producerId = 0;
             int16 producerEpoch = 0;
             int8 length;
             int16[length] packetIds = null;
         }
     }
  }
