<?xml version="1.0" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.aklivity.zilla</groupId>
    <artifactId>runtime</artifactId>
    <version>develop-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>engine</artifactId>
  <name>zilla::runtime::engine</name>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <jacoco.coverage.ratio>0.70</jacoco.coverage.ratio>
    <jacoco.missed.count>4</jacoco.missed.count>
  </properties>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>engine.spec</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.json</groupId>
      <artifactId>jakarta.json-api</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.json.bind</groupId>
      <artifactId>jakarta.json.bind-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.leadpony.justify</groupId>
      <artifactId>justify</artifactId>
    </dependency>
    <dependency>
      <groupId>org.leadpony.joy</groupId>
      <artifactId>joy-yaml</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.agrona</groupId>
      <artifactId>agrona</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse</groupId>
      <artifactId>yasson</artifactId>
      <scope>runtime</scope>
      <exclusions>
        <exclusion>
          <groupId>org.glassfish</groupId>
          <artifactId>jakarta.json</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
      <version>2.15.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jmock</groupId>
      <artifactId>jmock-junit4</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kaazing</groupId>
      <artifactId>k3po.driver</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kaazing</groupId>
      <artifactId>k3po.lang</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kaazing</groupId>
      <artifactId>k3po.junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.openjdk.jmh</groupId>
      <artifactId>jmh-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.openjdk.jmh</groupId>
      <artifactId>jmh-generator-annprocess</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
      <testResource>
        <directory>src/test/scripts</directory>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.jasig.maven</groupId>
        <artifactId>maven-notice-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>${project.groupId}</groupId>
        <artifactId>flyweight-maven-plugin</artifactId>
        <version>${project.version}</version>
        <configuration>
          <scopeNames>core</scopeNames>
          <packageName>io.aklivity.zilla.runtime.engine.internal.types</packageName>
          <testPackageName>io.aklivity.zilla.runtime.engine.test.internal.k3po.ext.types</testPackageName>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
              <goal>test-generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>engine.spec</artifactId>
                  <fileMappers>
                     <org.codehaus.plexus.components.io.filemappers.RegExpFileMapper>
                       <pattern>^\Qio/aklivity/zilla/specs/engine/\E</pattern>
                       <replacement>io/aklivity/zilla/runtime/engine/internal/</replacement>
                     </org.codehaus.plexus.components.io.filemappers.RegExpFileMapper>
                  </fileMappers>
                </artifactItem>
              </artifactItems>
              <includes>io/aklivity/zilla/specs/engine/schema/engine.schema.json</includes>
              <outputDirectory>${project.build.directory}/classes</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>unpack-test-resources</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>engine.spec</artifactId>
                  <fileMappers>
                     <org.codehaus.plexus.components.io.filemappers.RegExpFileMapper>
                       <pattern>^\Qio/aklivity/zilla/specs/engine/schema/\E</pattern>
                       <replacement>io/aklivity/zilla/runtime/engine/test/internal/</replacement>
                     </org.codehaus.plexus.components.io.filemappers.RegExpFileMapper>
                  </fileMappers>
                </artifactItem>
              </artifactItems>
              <includes>
                io/aklivity/zilla/specs/engine/schema/binding/test.schema.patch.json,
                io/aklivity/zilla/specs/engine/schema/exporter/test.schema.patch.json,
                io/aklivity/zilla/specs/engine/schema/guard/test.schema.patch.json,
                io/aklivity/zilla/specs/engine/schema/metrics/test.schema.patch.json,
                io/aklivity/zilla/specs/engine/schema/catalog/test.schema.patch.json,
                io/aklivity/zilla/specs/engine/schema/vault/test.schema.patch.json
              </includes>
              <outputDirectory>${project.build.directory}/test-classes</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <artifactSet>
                <includes>
                  <include>org.apache.avro:avro</include>
                </includes>
              </artifactSet>
              <relocations>
                <relocation>
                  <pattern>org.apache.avro</pattern>
                  <shadedPattern>io.aklivity.zilla.runtime.engine.validator.avro</shadedPattern>
                </relocation>
              </relocations>
              <keepDependenciesWithProvidedScope>true</keepDependenciesWithProvidedScope>
              <useDependencyReducedPomInJar>true</useDependencyReducedPomInJar>
              <minimizeJar>true</minimizeJar>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.moditect</groupId>
        <artifactId>moditect-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
            <configuration>
              <includes>
                <include>META-INF/**/*</include>
                <include>io/aklivity/zilla/runtime/engine/test/EngineRule*.class</include>
                <include>io/aklivity/zilla/runtime/engine/internal/EngineTest*.class</include>
                <include>io/aklivity/zilla/runtime/engine/test/annotation/Configur*.class</include>
                <include>io/aklivity/zilla/runtime/engine/test/internal/k3po/ext/**/*.class</include>
                <include>io/aklivity/zilla/runtime/engine/test/internal/**/*.schema.patch.json</include>
                <include>io/aklivity/zilla/runtime/engine/test/internal/binding/**/*.class</include>
                <include>io/aklivity/zilla/runtime/engine/test/internal/exporter/**/*.class</include>
                <include>io/aklivity/zilla/runtime/engine/test/internal/expression/**/*.class</include>
                <include>io/aklivity/zilla/runtime/engine/test/internal/guard/**/*.class</include>
                <include>io/aklivity/zilla/runtime/engine/test/internal/catalog/**/*.class</include>
                <include>io/aklivity/zilla/runtime/engine/test/internal/metrics/**/*.class</include>
                <include>io/aklivity/zilla/runtime/engine/test/internal/vault/**/*.class</include>
                <include>io/aklivity/zilla/runtime/engine/internal/concurrent/bench/**/*.class</include>
                <include>org/openjdk/jmh/infra/generated/**/*.class</include>
              </includes>
              <excludes>
                <exclude>META-INF/services/io.aklivity.zilla.runtime.engine.config.ConditionConfigAdapterSpi</exclude>
                <exclude>META-INF/services/io.aklivity.zilla.runtime.engine.config.WithConfigAdapterSpi</exclude>
                <exclude>**/*IT.class</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.kaazing</groupId>
        <artifactId>k3po-maven-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>${project.artifactId}</artifactId>
            <version>${project.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>io/aklivity/zilla/runtime/engine/internal/types/**/*.class</exclude>
            <exclude>io/aklivity/zilla/runtime/engine/test/internal/k3po/ext/types/**/*.class</exclude>
          </excludes>
          <rules>
            <rule>
              <element>BUNDLE</element>
              <limits>
                <limit>
                  <counter>INSTRUCTION</counter>
                  <value>COVEREDRATIO</value>
                  <minimum>${jacoco.coverage.ratio}</minimum>
                </limit>
                <limit>
                  <counter>CLASS</counter>
                  <value>MISSEDCOUNT</value>
                  <maximum>${jacoco.missed.count}</maximum>
                </limit>
              </limits>
            </rule>
          </rules>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.gatling</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <configuration>
          <artifactSet>
            <includes>
              <include>org.agrona:agrona</include>
              <include>io.aklivity.zilla:engine</include>
              <include>org.openjdk.jmh:jmh-core</include>
              <include>net.sf.jopt-simple:jopt-simple</include>
              <include>org.apache.commons:commons-math3</include>
              <include>commons-cli:commons-cli</include>
            </includes>
          </artifactSet>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
