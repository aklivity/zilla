/*
 * Copyright 2021-2023 Aklivity Inc.
 *
 * Aklivity licenses this file to you under the Apache License,
 * version 2.0 (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at:
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */
scope internal
{
    scope cache
    {
        struct KafkaCacheEntry
        {
            int64 offset;
            int64 timestamp;
            int64 ownerId;
            int64 acknowledge = 0;
            int32 sequence = -1;
            int64 ancestor;
            int64 descendant;
            int32 flags = 0;  // 0x01 = DIRTY, 0x02 = COMPLETED, 0x04 = ABORTED, 0x08 = CONTROL
            int32 deltaPosition = -1;
            int16 ackMode = -1;
            kafka::KafkaKey key;
            int32 valueLen;
            octets[valueLen] value = null;
            kafka::KafkaHeader[] headers;
            kafka::KafkaHeader[] trailers;
            uint32 paddingLen;
            octets[paddingLen] padding;
        }

        struct KafkaCacheDelta
        {
            int32 length;
            octets[length] value = null;
        }
    }
}
